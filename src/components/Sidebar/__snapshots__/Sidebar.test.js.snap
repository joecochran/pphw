// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Sidebar> matches snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Sidebar />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="c-sidebar__onboarding"
        >
          <Popup
            action="baz"
            content="bar"
            title="foo"
          />
        </div>,
        <Draggable
          name="Add lane"
        />,
        <Draggable
          name="Add bar"
        />,
      ],
      "className": "c-sidebar",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Popup
            action="baz"
            content="bar"
            title="foo"
          />,
          "className": "c-sidebar__onboarding",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "action": "baz",
            "content": "bar",
            "handleStepUpdate": undefined,
            "step": undefined,
            "title": "foo",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "handleDrag": undefined,
          "handleDragEnd": undefined,
          "name": "Add lane",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "handleDrag": undefined,
          "handleDragEnd": undefined,
          "name": "Add bar",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="c-sidebar__onboarding"
          >
            <Popup
              action="baz"
              content="bar"
              title="foo"
            />
          </div>,
          <Draggable
            name="Add lane"
          />,
          <Draggable
            name="Add bar"
          />,
        ],
        "className": "c-sidebar",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Popup
              action="baz"
              content="bar"
              title="foo"
            />,
            "className": "c-sidebar__onboarding",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "action": "baz",
              "content": "bar",
              "handleStepUpdate": undefined,
              "step": undefined,
              "title": "foo",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "handleDrag": undefined,
            "handleDragEnd": undefined,
            "name": "Add lane",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "handleDrag": undefined,
            "handleDragEnd": undefined,
            "name": "Add bar",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
